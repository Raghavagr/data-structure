# LEADER IN AN ARRAY:- leader element is the element which is greatest from all the element which occurs towards its right. and right-most element is 
                       always a leader because there is not any element from it right.
                       
 URL: https://ide.geeksforgeeks.org/mJPHnNuRXZ              
 
 CODE:
 
 #include <stdio.h>

int printLeaders(int[],int);
int main() {
	int arr[] = {12,17,6,4,7,3};
	int n = sizeof(arr) / sizeof(arr[0]);
	printLeaders(arr,n);
}

int printLeaders(int arr[],int n)
{
    int i,j;
    for(i=0;i<n;i++)
    {
        for(j=i+1;j<n;j++)
        {
            if(arr[i] <= arr[j])
               break;
        }
        if(j==n)  // the loop didn't break
        {
            printf(" %d",arr[i]);
        }
    }
}

2nd METHOD) SOME SIMPLE

URL: https://ide.geeksforgeeks.org/FQxYjt50vS
CODE:

// as the rightmost element will always be Leader
// then we will print this first and we will traverse from right 
// and continuously update it and check the elements from array that whether it is greater or not.

#include <stdio.h>

int printLeaders(int[],int);
int main() {
	int arr[] = {12,17,6,4,7,3};
	int n = sizeof(arr) / sizeof(arr[0]);
	printLeaders(arr,n);
}

int printLeaders(int arr[],int n)
{
    int i;
    int max_from_right = arr[n-1];
    printf(" %d",max_from_right);
    
    for(i=n-2;i>=0;i--)
    {
        if(max_from_right < arr[i]) {
            max_from_right = arr[i];
            printf(" %d",max_from_right);
        }
    }
}

