// its an queue which inserts the item from rear end and deleted the item from front

#include <stdio.h>
#include <stdlib.h>

void insert();
void delete();
void display();

struct node {
    int data;
    struct node *next; 
};
struct node *front;
struct node *rear;

void main() {
    int choice;
    while(choice!=4) {
        printf("\n1) insert\n2)delete\n3)display\n4) exit");
        printf("\nenter your choice");    
        scanf("%d",&choice);
        switch(choice)
        {
            case 1:
             insert();
             break;
            case 2:
             delete();
             break;
            case 3:
             display();
             break;
            case 4:
             exit(0);
             break;
            default:
             printf("enter valid choice");
        }
        
    }
}

void insert() {
    int item;
    struct node *ptr;
    ptr = (struct node*)malloc(sizeof(struct node));
    if(ptr == NULL) {
        printf("overflow!");
    }
    else {
        printf("insert the item");
        scanf("%d",&item);
        ptr->data = item;
        if(front == NULL) {
            front = ptr;
            rear = ptr;
            front->next = NULL;
            rear->next = NULL;
        }
        else {
            rear->next = ptr;
            rear = ptr;
            rear->next = NULL;
        }
        printf("\nitem inserted");
    }
}

void delete() {
    struct node *ptr;
    if(front == NULL) {
        printf("underflow!..");
    }
    else {
        ptr = front;
        front = front->next;
        free(ptr);
        printf("\nnode deleted");
    }
}

void display() {
    struct node *ptr;
    if(front == NULL) {
        printf("Underflow!..");
    }
    else {
        printf("\nPrinting the values");
        ptr = front;
        while(ptr!=NULL) {
            printf("\n%d",ptr->data);
            ptr = ptr->next;
        }
    }
}
