// STACK USING LINKED LIST.

// URL: https://ide.geeksforgeeks.org/v3TXTyl5ZU

//code
#include <stdio.h>
#include <stdlib.h>

struct Node{
    int data;
    struct Node *next;
};

void linkedListTraversal(struct Node *ptr) {
    printf("printing elements:\n");
    while(ptr != NULL) {
        printf("Element: %d\n",ptr->data);
        ptr = ptr->next;
    }
}

int isEmpty(struct Node *top) {
    if(top == NULL) {
        return 1;
    }
    else {
        return 0;
    }
}

int isFull(struct Node *top) {
    struct Node *p = (struct Node *)malloc(sizeof(struct Node));
    if(p == NULL) {
        return 1;
    }
    else {
        return 0;
    }
}

struct Node *Push(struct Node *top, int x) {
    if(isFull(top)) {
        printf("stack overflow\n");
    }
    else {
        struct Node *n = (struct Node *)malloc(sizeof(struct Node));
        n->data = x;
        n->next = top;
        top = n;
        return top;
    }
}

int Pop(struct Node **top) {
    if(isEmpty(*top)) {
        printf("stack underflow\n");
    }
    else {
        struct Node *n = *top;
        *top = (*top)->next;
        int x = n->data;
        free(n);
        return x;
    }
}

int main() {
	struct Node *top = NULL;
	top = Push(top, 7);
	top = Push(top, 39);
	top = Push(top, 23);
	linkedListTraversal(top);
	
	int element = Pop(&top);
	printf("Popped element is: %d\n",element);
	linkedListTraversal(top);
	return 0;
}


