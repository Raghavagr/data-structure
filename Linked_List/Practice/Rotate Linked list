// Given a singly linked list, rotate the linked list counter-clockwise by k nodes. Where k is a given positive integer. 
    For example, if the given linked list is 10->20->30->40->50->60 and k is 4, the list should be modified to 50->60->10->20->30->40. 
    Assume that k is smaller than the count of nodes in linked list.
    
// IMPLEMENTATION

Node* rotate(Node* head, int k)
    {
        // Your code here
        Node *current = head;
        int count=1;
        while(count < k && current != NULL) {
            current = current->next;
            count++;
        }
        
        /*
        if(current == NULL) {
            return head;
        }
        */
        struct Node *kthnode = current;
        
        while(current->next != NULL) {
            current = current->next;
        }
        
        // point the last node means current to head to rotate
        current->next = head;
        
        // pont head from last to start..
        head = kthnode->next;
        
        //kth node next to NULL
        kthnode->next=NULL;
        
        return head;
  }
    
