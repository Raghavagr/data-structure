INSERTION SORT

Insertion is the sorting algorithm which works such as: 
  - first we suppose there are 2 array as, take the 1st element as 1 sorted array and remaining array from 2nd element as unsorted 2nd array
  - Now, from each pass we take 1 element from unsorted array and compare y each element in 1st array and insert it at its correct position
  - this way we make our 1st array as sorted array,
  - insert the element at its corect pos.
  
  - eg: array[] = {9, 12, 7, 27, 18}
    - suppose 9 is one array, and remaining 2nd
    - now we have to insert 12 into 1st part, compare 12 with 9, so it will be it's pos only
    - then insert 7 into 1st part. sor first compare 7 with 12, swap will be possible. then 7 will be compared with 9, again swap. 7 is at its pos
    - so on things go on.
    
// IMPLIMENTATION

// URL: https://ide.geeksforgeeks.org/dehI9eglEB

//code
// Insertion sort 
#include <stdio.h>

void printArray(int *arr, int n){
    for (int i = 0; i < n; i++)
    {
        printf("%d ", arr[i]);
    }
    printf("\n");
}

void insertionSort(int *arr, int n) {
    int key,j;
    // loop for passes
    for(int i=1; i<=n-1; i++) {
        key = arr[i];
        j = i-1;
        
        while(j>=0 && arr[j] > key) {
            arr[j+1] = arr[j];
            j--;
        }
        arr[j+1] = key;
    }
}

int main() {
    // Dry Run of the code
    // -1   0    1   2   3   4   5
   //      12,| 54, 65, 07, 23, 09 --> i=1, key=54, j=0
   //      12,| 54, 65, 07, 23, 09 --> 1st pass done (i=1)!

   //      12, 54,| 65, 07, 23, 09 --> i=2, key=65, j=1
   //      12, 54,| 65, 07, 23, 09 --> 2nd pass done (i=2)!

   //      12, 54, 65,| 07, 23, 09 --> i=3, key=7, j=2
   //      12, 54, 65,| 65, 23, 09 --> i=3, key=7, j=1
   //      12, 54, 54,| 65, 23, 09 --> i=3, key=7, j=0
   //      12, 12, 54,| 65, 23, 09 --> i=3, key=7, j=-1
   //      07, 12, 54,| 65, 23, 09 --> i=3, key=7, j=-1--> 3rd pass done (i=3)!

   // Fast forwarding and 4th and 5th pass will give:
   //      07, 12, 54, 65,| 23, 09 --> i=4, key=23, j=3
   //      07, 12, 23, 54,| 65, 09 --> After the 4th pass

   //      07, 12, 23, 54, 65,| 09 --> i=5, key=09, j=4
   //      07, 09, 12, 23, 54, 65| --> After the 5th pass 
    
	int arr[] = {12, 54, 65, 7, 23, 9};
	int n = sizeof(arr)/sizeof(arr[0]);
	printf("original array:\n");
	printArray(arr,n);
	printf("sorted array:\n");
	insertionSort(arr,n);
	printArray(arr,n);
	return 0;
}
