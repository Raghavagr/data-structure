// COUNT SORT ALGO IN C
It is very fast algorthm 

// URL: https://ide.geeksforgeeks.org/vFgwVDXE12

#include <stdio.h>
#include <stdlib.h>

void printArray(int arr[], int n) {
    for(int i=0; i<n; i++) {
        printf("%d ",arr[i]);
    }
}

int maximum(int arr[], int n) {
    int max=0;
    for(int i=0; i<n; i++) {
        if(max < arr[i]) {
            max = arr[i];
        }
    }
    return max;
}

void countSort(int arr[], int n) {
    int i,j;
    
    //find the maximum element in A
    int max = maximum(arr, n);
    
    // create a new array of size max+1
    int *count = (int *)malloc((max+1) * sizeof(int));
    
    // initialize all elements in count arr to 0
    for(i=0; i<max+1; i++) {
        count[i] = 0;
    }
    
    // Increment the corresponding index in count array.
    // element of arr and that index in count will be increased
    for(i=0; i<n; i++) {
        count[arr[i]] = count[arr[i]] + 1;
    }
    
    i=0; // count for count array
    j=0; // count for given array
    
    // print the index of count from start if it is > 0
    // if it is present more then 1 then print 2 time
    while(i<=max) {
        if(count[i] > 0) {
            arr[j] = i;
            count[i] = count[i]-1;
            j++;
        }
        else {
            i++;
        }
    }
}

int main() {
	int arr[] = {7,1,4,12,4,9,16};
	int n = sizeof(arr) / sizeof(arr[0]);
	printf("before sorting\n");
	printArray(arr,n);
	printf("\nafter sorting\n");
	countSort(arr,n);
	printArray(arr,n);
	return 0;
}
